#BlueJ class context
comment0.target=RowCompare
comment0.text=\n\ RowCompare\ knows\ how\ to\ compare\ to\ rows\ of\ a\ table.\n\ This\ class\ can\ be\ used\ with\ Arrays.sort(Obj[],RowCompare).\n
comment1.params=col
comment1.target=RowCompare(int)
comment1.text=\n\ Constructor.\n\ @param\ col\ Designate\ the\ column\ on\ which\ rows\ shall\ be\ sorted.\ Start\ counting\ at\ zero.\n
comment2.params=obj1\ obj2
comment2.target=int\ compare(java.lang.Object,\ java.lang.Object)
comment2.text=\n\ compare()\n\ This\ method\ should\ be\ invoked\ indirectly\ by\ calling\ Arrays.sort().\n\ If\ both\ parameters\ seem\ to\ be\ table\ rows\ (type\ Object\ []),\ \n\ then\ extract\ the\ nth\ value\ of\ both\ rows,\ \n\ where\ n\ is\ the\ sorting\ column\ provided\ to\ the\ constructor\ of\ this\ class.\n\ If\ both\ values\ are\ String\ or\ Integer\ or\ Double,\n\ then\ invoke\ first.compareTo(second).\ \n\ In\ all\ other\ situations,\ this\ method\ returns\ 0,\ meaning\ rows\ are\ equal.\n\ @param\ obj1\ One\ row\ of\ table\ stored\ as\ Object\ []\ [].\n\ @param\ obj2\ Another\ row\ of\ a\ table\ stored\ as\ Object\ []\ [].\n
numComments=3
